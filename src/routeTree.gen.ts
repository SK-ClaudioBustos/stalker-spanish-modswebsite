/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ModsStalkerModFolderIndexRouteImport } from './routes/mods/stalker/$modFolder/index'
import { Route as ModsStalkerModFolderModIdRouteImport } from './routes/mods/stalker/$modFolder/$modId'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ModsStalkerModFolderIndexRoute =
  ModsStalkerModFolderIndexRouteImport.update({
    id: '/mods/stalker/$modFolder/',
    path: '/mods/stalker/$modFolder/',
    getParentRoute: () => rootRouteImport,
  } as any)
const ModsStalkerModFolderModIdRoute =
  ModsStalkerModFolderModIdRouteImport.update({
    id: '/mods/stalker/$modFolder/$modId',
    path: '/mods/stalker/$modFolder/$modId',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/mods/stalker/$modFolder/$modId': typeof ModsStalkerModFolderModIdRoute
  '/mods/stalker/$modFolder': typeof ModsStalkerModFolderIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/mods/stalker/$modFolder/$modId': typeof ModsStalkerModFolderModIdRoute
  '/mods/stalker/$modFolder': typeof ModsStalkerModFolderIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/mods/stalker/$modFolder/$modId': typeof ModsStalkerModFolderModIdRoute
  '/mods/stalker/$modFolder/': typeof ModsStalkerModFolderIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/mods/stalker/$modFolder/$modId'
    | '/mods/stalker/$modFolder'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/mods/stalker/$modFolder/$modId' | '/mods/stalker/$modFolder'
  id:
    | '__root__'
    | '/'
    | '/mods/stalker/$modFolder/$modId'
    | '/mods/stalker/$modFolder/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ModsStalkerModFolderModIdRoute: typeof ModsStalkerModFolderModIdRoute
  ModsStalkerModFolderIndexRoute: typeof ModsStalkerModFolderIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/mods/stalker/$modFolder/': {
      id: '/mods/stalker/$modFolder/'
      path: '/mods/stalker/$modFolder'
      fullPath: '/mods/stalker/$modFolder'
      preLoaderRoute: typeof ModsStalkerModFolderIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/mods/stalker/$modFolder/$modId': {
      id: '/mods/stalker/$modFolder/$modId'
      path: '/mods/stalker/$modFolder/$modId'
      fullPath: '/mods/stalker/$modFolder/$modId'
      preLoaderRoute: typeof ModsStalkerModFolderModIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ModsStalkerModFolderModIdRoute: ModsStalkerModFolderModIdRoute,
  ModsStalkerModFolderIndexRoute: ModsStalkerModFolderIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
